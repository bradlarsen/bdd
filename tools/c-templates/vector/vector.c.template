/* THIS FILE WAS GENERATED FROM A TEMPLATE FILE.  MAKE MODIFICATIONS
TO THE TEMPLATE INSTEAD. */

#include "${header_name}"

#include <assert.h>
#include <stdlib.h>

static const unsigned INITIAL_CAPACITY = 32;

void
${prefix}_create (${vector_type} *vec)
{
    ${prefix}_create_with_capacity(vec, INITIAL_CAPACITY);
}

void
${prefix}_create_with_capacity (${vector_type} *vec, unsigned num_elems)
{
    num_elems = num_elems > 0 ? num_elems : INITIAL_CAPACITY;
    vec->store = (${element_type} *)
        malloc (num_elems * sizeof(${element_type}));
    vec->capacity = num_elems;
    vec->num_elems = 0;
}

void
${prefix}_destroy (${vector_type} *vec)
{
    free (vec->store);
}

void
double_vector_size (${vector_type} *vec)
{
    unsigned new_capacity = vec->capacity * 2;
    vec->store = (${element_type} *)
        realloc (vec->store, new_capacity * sizeof(${element_type}));
    vec->capacity = new_capacity;
}
